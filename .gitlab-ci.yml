---
include:
  - project: 'ci-cd/templates'
    ref: master
    file: 'build.shell.gitlab-ci.yml'
  - project: 'ci-cd/templates'
    ref: master
    file: 'lintv2.shell.gitlab-ci.yml'
  - project: 'ci-cd/templates'
    ref: master
    file: 'deployv2.shell.gitlab-ci.yml'
  - project: 'ci-cd/templates'
    ref: master
    file: 'cleanupv2.shell.gitlab-ci.yml'
  - project: 'ci-cd/templates'
    ref: master
    file: 'dismiss.shell.gitlab-ci.yml'

.before:
  before_script:

stages:
  - build
  - lint
  - test
  - deploy
  - cleanup
  - dismiss

# TEST
.test:
  tags:
    - docker
  image: node:20-alpine
  stage: test
  allow_failure: true

test_lint-and-type-coverage:
  extends: .test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - 'app/**/*.ts'
  script:
    - cd app/ && npm ci
    - npm run lint
    - npm run type-coverage

# PROD
build_prod:
  extends: .build_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
lint_prod:
  extends: .lint_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
deploy_prod:
  extends: .deploy_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
cleanup_prod:
  extends: .cleanup_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
dismiss_prod:
  extends: .dismiss_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true

# EUPROD
build_euprod:
  extends: .build_euprod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
lint_euprod:
  extends: .lint_euprod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
deploy_euprod:
  extends: .deploy_euprod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
cleanup_euprod:
  extends: .cleanup_euprod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
dismiss_euprod:
  extends: .dismiss_euprod
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true

# SPD
build_spd:
  extends: .build_spd
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
lint_spd:
  extends: .lint_spd
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
deploy_spd:
  extends: .deploy_spd
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
cleanup_spd:
  extends: .cleanup_spd
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true
dismiss_spd:
  extends: .dismiss_spd
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $STAGE_PIPELINE != "true"
      when: manual
      allow_failure: true

# STAGE
build_stage:
  extends: .build_stage
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $STAGE_PIPELINE == "true")
lint_stage:
  extends: .lint_stage
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $STAGE_PIPELINE == "true")
deploy_stage:
  extends: .deploy_stage
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $STAGE_PIPELINE == "true")
      when: manual
      allow_failure: true
cleanup_stage:
  extends: .cleanup_stage
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $STAGE_PIPELINE == "true")
      when: manual
      allow_failure: true
dismiss_stage:
  extends: .dismiss_stage
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $STAGE_PIPELINE == "true")
      when: manual
      allow_failure: true
