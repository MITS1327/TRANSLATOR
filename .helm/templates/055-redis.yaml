{{- $replicaCount := index .Values (env "ENVNAME") "replicaCount" -}}
{{- $keydbHost := index .Values (env "ENVNAME") "keydbHost" -}}
{{- $keydbPort := index .Values (env "ENVNAME") "keydbPort" -}}

apiVersion: v1
kind: Service
metadata:
  name: {{ $keydbHost }}
spec:
  selector:
    app: {{ $keydbHost }}
  ports:
    - name: {{ $keydbHost }}
      protocol: TCP
      port: {{ $keydbPort }}
      targetPort: {{ $keydbHost }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $keydbHost }}
  labels:
    app: {{ $keydbHost }}
spec:
  selector:
    matchLabels:
      app: {{ $keydbHost }}
  serviceName: {{ $keydbHost }}
  replicas: {{ $replicaCount }}
  template:
    metadata:
      labels:
        app: {{ $keydbHost }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ $keydbHost }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ $keydbHost }}
        image: eqalpha/keydb
        command: [ "/bin/bash", "-c"]
        args:
        - |
          set -euxo pipefail
          host="$(hostname)"
          replicas=()
          for replicaId in {0..{{ (sub ($replicaCount | int) 1) }}}; do
            if [ "${host}" != "{{ $keydbHost }}-${replicaId}" ]; then
                replicas+=("--replicaof {{ $keydbHost }}-${replicaId}.{{ $keydbHost }} {{ $keydbPort }} ")
            fi
          done
          exec keydb-server /etc/keydb/redis.conf \
            --active-replica yes  \
            --multi-master yes \
            --appendonly no \
            --bind 0.0.0.0 \
            --port {{ $keydbPort }} \
            --protected-mode no \
            --loglevel notice \
            "${replicas[@]}"
        ports:
        - name: {{ $keydbHost }}
          containerPort: {{ $keydbPort }}
          protocol: TCP
        volumeMounts:
        - name: keydb-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: keydb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  {{- if not (or (eq (env "ENVNAME") "dev") (eq (env "ENVNAME") "stage")) }}
      storageClassName: csi-rbd-sc
  {{- else }}
      storageClassName: standard
  {{- end }}
