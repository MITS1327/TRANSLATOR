{{- if not (eq .Values.global.env "dev") }}
{{- $dns := index .Values "dns" | default list -}}
{{- $hosts := list -}}
{{- $domains := list -}}
{{- if or (eq .Values.global.env "prod") (eq .Values.global.env "euprod")}}
{{- range $dns }}
    {{- $hostParts :=  splitList "." .prod | list | first | reverse -}}
    {{- $domains = append $domains (printf "%s.%s" (index $hostParts 1) (index $hostParts 0) )}}
    {{- $hosts = append $hosts (printf "%s.%s.%s" ($.Values.APPNAME) (index $hostParts 1) (index $hostParts 0) ) }}
{{- end }}
{{- end }}

{{- $apiPrefix := index .Values (.Values.global.env) "apiPrefix"  -}}
{{- $swaggerPath := index .Values (.Values.global.env) "swaggerPath"  -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress-public
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-headers: "x-products-timestamp"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_origin ~ '^https:\/\/(.*)?\.?({{ print (join "|" (prepend $domains (.Values.DOMAIN))) }})$' ) {
        more_set_headers "Access-Control-Allow-Origin: $http_origin";
        more_set_headers "Access-Control-Allow-Credentials: true";
        more_set_headers "Access-Control-Expose-Headers: X-Products-Hash";
      }
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' "true" always;
        add_header 'Access-Control-Allow-Methods' "GET, PATCH, PUT, POST, DELETE, OPTIONS" always;
        add_header 'Access-Control-Allow-Headers' "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Products-Hash" always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        return 204;
      }
spec:
  rules:
  {{- range prepend $hosts .Values.CI_URL  }}
  - host: {{ . }}
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name:  {{ $.Chart.Name }}-front
            port:
              number: 80
      - pathType: Prefix
        path:  {{ printf "/%s/%s" $apiPrefix "public" }}
        backend:
          service:
            name: {{ $.Chart.Name }}-api
            port:
              number:  3000
      - pathType: Prefix
        path:  {{ printf "/%s/%s" $apiPrefix $swaggerPath }}
        backend:
          service:
            name: {{ $.Chart.Name }}-api
            port:
              number:  8080
  {{- end }}
---
{{- end }}
