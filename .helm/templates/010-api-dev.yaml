{{- if  (eq .Values.global.env "dev") }}

{{- $apiPrefix := index .Values (.Values.global.env) "apiPrefix"  -}}
{{- $swaggerPath := index .Values (.Values.global.env) "swaggerPath"  -}}

{{- $baseUrl := printf "/%s/%s" $apiPrefix $swaggerPath  -}}

{{- $apiChartName := printf "%s-%s" .Chart.Name .Values.global.env -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-api
  labels:
    app: {{ .Chart.Name }}-api
spec:
  replicas: 1
  selector:
      matchLabels:
        app: {{ .Chart.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-api
    spec:
      initContainers:
      - name: prepare-dev-env
        image: {{ index .Values.werf.image $apiChartName }}
        envFrom:
        - configMapRef:
            name: config-values
        volumeMounts:
        - mountPath: /workspace
          name: workspace-dev
        - name: id-rsa-vcs
          mountPath: /root/.ssh/id_rsa
          subPath: id_rsa
        command:
          - "/bin/bash"
          - "-c"
          - "sudo /install/prepare-scripts/init-dev-env.sh"
      containers:
      - name: swagger
        image: swaggerapi/swagger-ui
        ports:
        - containerPort: 8080
        env:
        - name: BASE_URL
          value: {{ $baseUrl }}
        - name: PORT
          value: "8080"
        - name: URLS
          value: "[
              {
                \"url\":\"/{{ $apiPrefix }}/protected/{{ $swaggerPath }}\",
                \"name\":\"protected\"
              },
              {
                \"url\":\"/{{ $apiPrefix }}/private/{{ $swaggerPath }}\",
                \"name\":\"private\"
              },
              {
                \"url\":\"/{{ $apiPrefix }}/public/{{ $swaggerPath }}\",
                \"name\":\"public\"
              },
            ]"
      - name: {{ .Chart.Name }}-api
        image: {{ index .Values.werf.image $apiChartName }}
        env:
        - name: ENVNAME
          value: {{ .Values.global.env }}
        - name: PROJECT
          value: {{ printf "%s-%s" .Chart.Name (.Values.global.env)}}
        envFrom:
        - configMapRef:
            name: config-values
        volumeMounts:
        - mountPath: /workspace
          name: workspace-dev
        - name: id-rsa-vcs
          mountPath: /root/.ssh/id_rsa
          subPath: id_rsa
      volumes:
      - name: id-rsa-vcs
        secret:
          secretName: id-rsa-vcs
          defaultMode: 0600
      - name: workspace-dev
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-workspace-pv-claim
{{- end }}
